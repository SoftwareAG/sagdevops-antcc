<project name="sagcc" default="help-sagcc" xmlns="antlib:org.apache.tools.ant" xmlns:if="ant:if" xmlns:unless="ant:unless" basedir="." >
	<description>
        Core Command Central API client library and targets 
    </description>
	
	<property environment="env" />

	<!-- default Command Central client name -->
	<condition property="cc" value="${env.CC_CLIENT}" else="default">
		<isset property="env.CC_CLIENT"/>
	</condition>

	<!-- project clients -->
	<condition property="cc.properties" value="clients/${cc}.properties">
		<available file="clients/${cc}.properties"/>
	</condition>
	
    <condition property="cc.properties" value="clients/${cc}/cc.properties">
        <available file="clients/${cc}/cc.properties"/>
    </condition>
	
	<condition property="cc.properties" value="client/${cc}.properties">
        <available file="client/${cc}.properties"/>
    </condition>
	
    <!-- user clients -->
	<condition property="cc.properties" value="${user.home}/.sag/cc.properties">
		<available file="${user.home}/.sag/cc.properties"/>
	</condition>
		
	<target name="help-sagcc">
		<echo>
Environment variables:

CC_SERVER=https://host:port/     Command Central REST API endpoint URL
CC_CLIENT=other                  Command Central client configuration (see below)
CC_PASSWORD=password             Command Central server Administrator password  

Optional parameter for any target:

-Dcc=other                       Command Central client configuration
                                 using CC_CLIENT env var
                                 using global settings in '~/.sag/cc.properties' 
								 or from 'clients/default/cc.properties'
                                 or from 'clients/default.properties'
                                 or custom 'clients/other.properties'
Targets:

ant waitcc                       Wait for Command Central ready status
ant restartcc                    Restart local or remote Command Central server
ant jobs                         List recent jogs
ant killjobs                     Cancel active and remove completed jobs
ant log                          Show tail of Command Central default log
ant logs                         Show tail of agents default log
		</echo>
	</target>

	<!-- call this target internally to initialize connection to CC using cc.properties -->
	<target name="sagccInit">

		<antversion atleast="1.9" property="ant.version.ok" />
		<fail unless="ant.version.ok">
			ERROR: Unsupported Ant version: ${ant.version}. 
Make sure that Ant version is 1.9 or greater
		</fail>

		<fail>
			<condition>
				<not>
				<or>
					<equals arg1="${ant.java.version}" arg2="1.8"/>
					<equals arg1="${ant.java.version}" arg2="1.9"/>
				</or>
				</not>
			</condition>
			Unsupported Java version: ${ant.java.version}. 
Make sure that Java version is 1.8 or greater
		</fail>

		<condition property="cc.properties.exists" >
			<available file="${cc.properties}"/>
		</condition>

		<echo unless:set="cc.properties.exists" message="Client configuration file not found. Using ENV variables" />
		
		<property file="${cc.properties}" />

		<condition property="cc.cli.home" value="${env.CC_CLI_HOME}" >
			<isset property="env.CC_CLI_HOME" />
		</condition>

		<fail unless="cc.cli.home">
			ERROR: Neither CC_CLI_HOME environment variable not 'cc.cli.home' property are set!
			
Make sure you bootstrap Command Central client on this host
		</fail>

		<echo>CC CLI HOME: ${cc.cli.home}</echo>

		<path description="" id="cc.ant.classpath">
			<fileset dir="${cc.cli.home}" includes="lib/*.jar" /> 
			<!-- to support 10.1 common/ant distro -->
			<fileset dir="${cc.cli.home}/../.." includes="common/lib/ant/**/*.jar" /> 
		</path>

		<taskdef description="core CLI support" resource="com/softwareag/platform/management/client/ant/antlib.xml" classpathref="cc.ant.classpath" />

		<taskdef description="conditions,cycles,etc" resource="net/sf/antcontrib/antlib.xml" classpathref="cc.ant.classpath" />
		<taskdef description="xml processing" name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpathref="cc.ant.classpath" />
		<taskdef description="unit testing" uri="antlib:org.apache.ant.antunit" resource="org/apache/ant/antunit/antlib.xml" classpathref="cc.ant.classpath" />

		<echo if:set="cc.properties.exists">CC CLI configuration: ${cc.properties}</echo>

		<ccsetup configurationFile="${cc.properties}" />

	</target>

	<!-- MAIN targets -->

	<target name="waitcc" description="Wait for Command Central ready" depends="sagccInit" >
		<echo>Waiting for Command Central ready status ...</echo>
		<cc command="get monitoring runtimestatus local OSGI-CCE" format="tsv" 
            expectedvalues="ONLINE" wait="300" checkevery="5" />
		<echo>Command Central is ready</echo>
	</target>

	<target name="restartcc" description="Restart Command Central" depends="sagccInit" >
		<echo>Restart Command Central</echo>
		<cc command="exec lifecycle restart local OSGI-CCE" format="tsv" />
		<cc command="get monitoring runtimestatus local OSGI-CCE" format="tsv" 
            expectedvalues="Connection refused,ONLINE" wait="300" checkevery="5" />
		<echo>Command Central restarted</echo>
	</target>

	<target name="jobs" description="List Command Central jobs" depends="sagccInit" >
		<cc command="list jobmanager jobs properties=status,description" format="tsv" />
	</target>

	<target name="killjobs" description="Kill Command Central jobs" depends="sagccInit" >
		<echo>Canceling jobs...</echo>
		<cc command="list jobmanager jobs includeHeaders=false properties=id" format="csv" outputproperty="jobs" failonerror="false" />
		<for list="${jobs}" param="job.id" delimiter="${line.separator}" keepgoing="true" trim="yes">
			<sequential>
				<cc command="delete jobmanager jobs @{job.id}" format="csv"  />
			</sequential>
		</for>
	</target>

    <target name="log" description="Command Central server default log" depends="sagccInit" >
    	<echo>
    		Command Central >>>
    	</echo>
        <cc command="get diagnostics logs local OSGI-CCE default.log tail lines=40" format="text/plain" />
    </target>

	<target name="logs" description="Agents default log" depends="sagccInit">
        <cc command="list landscape nodes includeHeaders=false properties=alias" format="csv" outputproperty="nodes" />
        <for list="${nodes}" param="node.alias" delimiter="${line.separator}" trim="true">
            <sequential>
            	<echo>
            		@{node.alias} >>>
            	</echo>
                <cc command="get diagnostics logs @{node.alias} OSGI-SPM default.log tail lines=20" format="text/plain" failonerror="false" />
            </sequential>
        </for>
    </target>
	
    <target name="ps" description="List runtime instances" depends="sagccInit" >
        <cc command="list inventory components runtimeComponentCategory=PROCESS properties=runtimeComponent.displayName,nodeAlias" format="tsv" />
    </target>

	<macrodef name="waitforjob" >
		<attribute name="jobid" default="${jobid}"/>
		<attribute name="wait" default="120" />
		<sequential>
			<cc command="list jobmanager jobs @{jobid} includeHeaders=false" 
				expectedvalues="DONE|ERROR|WARNING|TIMEOUT|CANCELED" 
				wait="@{wait}" 
				checkevery="20" 
				format="tsv" />
			<antcall target="_jobresult"/>	
		</sequential>
	</macrodef>

	<target name="_jobresult">
		<cc command="list jobmanager jobs ${jobid} properties=status includeHeaders=false" outputproperty="job.status" format="tsv" />
		<cc command="list jobmanager jobs ${jobid} properties=statusAsString includeHeaders=false" outputproperty="job.status.description" format="tsv" />

		<fail>
			<condition>
				<not>
					<equals arg1="${job.status}" arg2="DONE" />
				</not>
			</condition>
			Job execution failed with '${job.status}' status: ${job.status.description}
		</fail>
	</target>	

</project>